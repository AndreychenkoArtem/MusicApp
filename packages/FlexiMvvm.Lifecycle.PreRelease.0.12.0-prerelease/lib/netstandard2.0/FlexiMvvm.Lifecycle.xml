<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlexiMvvm.Lifecycle</name>
    </assembly>
    <members>
        <member name="T:FlexiMvvm.Commands.CommandProvider">
            <summary>
            Represents a provider that returns an existing command instance by name or creates a new one.
            </summary>
        </member>
        <member name="M:FlexiMvvm.Commands.CommandProvider.Get(System.Action,System.Func{System.Boolean},System.String)">
            <summary>
            Returns an existing <see cref="T:FlexiMvvm.Commands.Command"/> instance by <paramref name="name"/> or creates a new one. <paramref name="execute"/> is expected to be synchronous.
            </summary>
            <param name="execute">The synchronous <see cref="T:System.Action"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.Execute"/> is called.</param>
            <param name="canExecute">The <see cref="T:System.Func`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.CanExecute"/> is called. Can be <see langword="null"/>.</param>
            <param name="name">A unique name that is used to get a command instance.</param>
            <returns>The command instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> or <paramref name="name"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Commands.CommandProvider.Get``1(System.Action{``0},System.Func{``0,System.Boolean},System.String)">
            <summary>
            Returns an existing <see cref="T:FlexiMvvm.Commands.Command`1"/> instance by <paramref name="name"/> or creates a new one. <paramref name="execute"/> is expected to be synchronous.
            </summary>
            <typeparam name="T">The type of the command parameter.</typeparam>
            <param name="execute">The synchronous <see cref="T:System.Action`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.Execute(`0)"/> is called.</param>
            <param name="canExecute">The <see cref="T:System.Func`2"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.CanExecute(`0)"/> is called. Can be <see langword="null"/>.</param>
            <param name="name">A unique name that is used to get a command instance.</param>
            <returns>The command instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> or <paramref name="name"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Commands.CommandProvider.GetForAsync(System.Func{System.Threading.Tasks.Task},System.Func{System.Boolean},System.String)">
            <summary>
            Returns an existing <see cref="T:FlexiMvvm.Commands.Command"/> instance by <paramref name="name"/> or creates a new one. <paramref name="execute"/> is expected to be asynchronous.
            </summary>
            <param name="execute">The asynchronous <see cref="T:System.Func`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.Execute"/> is called.</param>
            <param name="canExecute">The <see cref="T:System.Func`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.CanExecute"/> is called. Can be <see langword="null"/>.</param>
            <param name="name">A unique name that is used to get a command instance.</param>
            <returns>The command instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> or <paramref name="name"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Commands.CommandProvider.GetForAsync``1(System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Boolean},System.String)">
            <summary>
            Returns an existing <see cref="T:FlexiMvvm.Commands.Command`1"/> instance by <paramref name="name"/> or creates a new one. <paramref name="execute"/> is expected to be asynchronous.
            </summary>
            <typeparam name="T">The type of the command parameter.</typeparam>
            <param name="execute">The asynchronous <see cref="T:System.Func`2"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.Execute(`0)"/> is called.</param>
            <param name="canExecute">The <see cref="T:System.Func`2"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.CanExecute(`0)"/> is called. Can be <see langword="null"/>.</param>
            <param name="name">A unique name that is used to get a command instance.</param>
            <returns>The command instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> or <paramref name="name"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:FlexiMvvm.Commands.RelayCommand">
            <summary>
            Represents a <see cref="T:FlexiMvvm.Commands.Command"/> that delegates execution and execution check to its owner and takes no parameters.
            </summary>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FlexiMvvm.Commands.RelayCommand"/> class.
            </summary>
            <param name="execute">The <see cref="T:System.Action"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.Execute"/> is called.</param>
            <param name="canExecute">
            The <see cref="T:System.Func`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command.CanExecute"/> is called. Can be <see langword="null"/>.
            <para><see cref="M:FlexiMvvm.Commands.Command.CanExecute"/> will return <see langword="true"/> if <paramref name="canExecute"/> is <see langword="null"/>.</para>
            </param>
            <param name="name">The diagnostic command name. Can be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand.Execute">
            <summary>
            Executes the command if <see cref="M:FlexiMvvm.Commands.RelayCommand.CanExecute"/> returns <see langword="true"/>.
            </summary>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand.CanExecute">
            <summary>
            Determines whether the command can be executed.
            </summary>
            <returns><see langword="true"/> if the command can be executed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:FlexiMvvm.Commands.RelayCommand`1">
            <summary>
            Represents a <see cref="T:FlexiMvvm.Commands.Command`1"/> that delegates execution and execution check to its owner and takes a parameter.
            </summary>
            <typeparam name="T">The type of the command parameter.</typeparam>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FlexiMvvm.Commands.RelayCommand`1"/> class.
            </summary>
            <param name="execute">The <see cref="T:System.Action`1"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.Execute(`0)"/> is called.</param>
            <param name="canExecute">
            The <see cref="T:System.Func`2"/> to invoke when <see cref="M:FlexiMvvm.Commands.Command`1.CanExecute(`0)"/> is called. Can be <see langword="null"/>.
            <para><see cref="M:FlexiMvvm.Commands.Command`1.CanExecute(`0)"/> will return <see langword="true"/> if <paramref name="canExecute"/> is <see langword="null"/>.</para>
            </param>
            <param name="name">The diagnostic command name. Can be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="execute"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand`1.Execute(`0)">
            <summary>
            Executes the command with the passed <paramref name="parameter"/> if <see cref="M:FlexiMvvm.Commands.RelayCommand`1.CanExecute(`0)"/> returns <see langword="true"/>.
            </summary>
            <param name="parameter">The command parameter.</param>
        </member>
        <member name="M:FlexiMvvm.Commands.RelayCommand`1.CanExecute(`0)">
            <summary>
            Determines whether the command can be executed with the passed <paramref name="parameter"/>.
            </summary>
            <param name="parameter">The parameter used by the command to determine if it can be executed.</param>
            <returns><see langword="true"/> if the command can be executed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:FlexiMvvm.Persistence.BundleFactory">
            <summary>
            Represents a factory that creates a new bundle instance.
            </summary>
        </member>
        <member name="M:FlexiMvvm.Persistence.BundleFactory.Create">
            <summary>
            Creates a new <see cref="T:FlexiMvvm.Persistence.IBundle"/> instance.
            </summary>
            <returns>The bundle instance.</returns>
        </member>
        <member name="E:FlexiMvvm.Persistence.Core.InMemoryBundle.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:FlexiMvvm.Persistence.Core.InMemoryBundle.Count">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetBool(System.Boolean,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetBoolArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetByteArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetChar(System.Char,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetCharArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetDateTime(System.DateTime,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetDateTimeOffset(System.DateTimeOffset,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetDouble(System.Double,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetDoubleArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetEnum``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetFloat(System.Single,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetFloatArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetInt(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetIntArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetLong(System.Int64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetLongArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetShort(System.Int16,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetShortArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetString(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.GetStringArray(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetBool(System.Boolean,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetBoolArray(System.Boolean[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetByteArray(System.Byte[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetChar(System.Char,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetCharArray(System.Char[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetDateTime(System.DateTime,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetDateTimeOffset(System.DateTimeOffset,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetDouble(System.Double,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetDoubleArray(System.Double[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetEnum``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetFloat(System.Single,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetFloatArray(System.Single[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetInt(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetIntArray(System.Int32[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetLong(System.Int64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetLongArray(System.Int64[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetShort(System.Int16,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetShortArray(System.Int16[],System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetString(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.InMemoryBundle.SetStringArray(System.String[],System.String)">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.Persistence.Core.IStateOwner">
            <summary>
            Defines the contract for an object whose state needs to be persisted in view's persistent storage.
            <para>This interface is intended for internal use by the FlexiMvvm.</para>
            </summary>
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.IStateOwner.ImportState(FlexiMvvm.Persistence.IBundle)">
            <summary>
            Imports the <paramref name="state"/> of the object from view's persistent storage.
            </summary>
            <param name="state">The state bundle. Can be <see langword="null"/>.</param>
        </member>
        <member name="M:FlexiMvvm.Persistence.Core.IStateOwner.ExportState">
            <summary>
            Exports the state of the object to view's persistent storage.
            </summary>
            <returns>The state bundle instance if the object has a state; otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="T:FlexiMvvm.Persistence.IBundle">
            <summary>
            Defines the contract for a container that stores data as a set of key/value pairs in view's persistent storage.
            </summary>
        </member>
        <member name="P:FlexiMvvm.Persistence.IBundle.Count">
            <summary>
            Gets the number of key/value pairs contained in the bundle.
            </summary>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.ContainsKey(System.String)">
            <summary>
            Determines whether the bundle contains the specified <paramref name="key"/>.
            </summary>
            <param name="key">The key to locate in the bundle.</param>
            <returns><see langword="true"/> if the bundle contains an element with the specified key; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetBool(System.Boolean,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetBoolArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetByteArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetChar(System.Char,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetCharArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetDateTime(System.DateTime,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetDateTimeOffset(System.DateTimeOffset,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetDouble(System.Double,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetDoubleArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetEnum``1(``0,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetFloat(System.Single,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetFloatArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetInt(System.Int32,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetIntArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetLong(System.Int64,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetLongArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetShort(System.Int16,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetShortArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetString(System.String,System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <paramref name="defaultValue"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="defaultValue">The default value to return if no matching key is found in the bundle.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <paramref name="defaultValue"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.GetStringArray(System.String)">
            <summary>
            Returns the value for a given <paramref name="key"/>, or <see langword="null"/> if no matching <paramref name="key"/> is found in the bundle.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value for the key, or <see langword="null"/> if no matching key was found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetBool(System.Boolean,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetBoolArray(System.Boolean[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetByteArray(System.Byte[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetChar(System.Char,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetCharArray(System.Char[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetDateTime(System.DateTime,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetDateTimeOffset(System.DateTimeOffset,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetDouble(System.Double,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetDoubleArray(System.Double[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetEnum``1(``0,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetFloat(System.Single,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetFloatArray(System.Single[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetInt(System.Int32,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetIntArray(System.Int32[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetLong(System.Int64,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetLongArray(System.Int64[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetShort(System.Int16,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetShortArray(System.Int16[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetString(System.String,System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if it is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.Persistence.IBundle.SetStringArray(System.String[],System.String)">
            <summary>
            Sets the value for a given <paramref name="key"/>, replacing the existing value if its reference is not equal to the new one.
            </summary>
            <param name="value">The value to set in the bundle. Can be <see langword="null"/>.</param>
            <param name="key">The key of the value to set.</param>
            <returns><see langword="true"/> if the new value was set; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:FlexiMvvm.ViewModels.InteractionWeakEventSubscriptionExtensions">
            <summary>Provides a set of static methods for weak subscriptions on <see cref="T:FlexiMvvm.ViewModels.Interaction"/> class events.</summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.InteractionWeakEventSubscriptionExtensions.RequestedWeakSubscribe(FlexiMvvm.ViewModels.Interaction,System.EventHandler)">
            <summary>Weak subscription on <see cref="E:FlexiMvvm.ViewModels.Interaction.Requested"/> event.</summary>
            <returns>Weak event subscription instance.</returns>
            <param name="eventSource">The source of the event.</param>
            <param name="eventHandler">Represents the method that will handle the <see cref="E:FlexiMvvm.ViewModels.Interaction.Requested"/> event.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="eventSource" /> is null.-or-<paramref name="eventHandler" /> is null.</exception>
        </member>
        <member name="T:FlexiMvvm.ViewModels.GenericInteractionWeakEventSubscriptionExtensions">
            <summary>Provides a set of static methods for weak subscriptions on <see cref="T:FlexiMvvm.ViewModels.Interaction`1"/> class events.</summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.GenericInteractionWeakEventSubscriptionExtensions.RequestedWeakSubscribe``1(FlexiMvvm.ViewModels.Interaction{``0},System.EventHandler{FlexiMvvm.ViewModels.InteractionRequestedEventArgs{``0}})">
            <summary>Weak subscription on <see cref="E:FlexiMvvm.ViewModels.Interaction`1.Requested"/> event.</summary>
            <returns>Weak event subscription instance.</returns>
            <param name="eventSource">The source of the event.</param>
            <param name="eventHandler">Represents the method that will handle the <see cref="E:FlexiMvvm.ViewModels.Interaction`1.Requested"/> event.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="eventSource" /> is null.-or-<paramref name="eventHandler" /> is null.</exception>
        </member>
        <member name="M:FlexiMvvm.ViewModels.Core.InMemoryLifecycleViewModelStore.Get``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.ViewModels.Core.InMemoryLifecycleViewModelStore.Add``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.ViewModels.Core.InMemoryLifecycleViewModelStore.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.ViewModels.DefaultLifecycleViewModelFactory">
            <summary>
            Represents an <see cref="T:FlexiMvvm.ViewModels.ILifecycleViewModelFactory"/> that creates a new lifecycle-aware view model instance using the <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.DefaultLifecycleViewModelFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:FlexiMvvm.ViewModels.DefaultLifecycleViewModelFactory"/> class.
            </summary>
            <param name="serviceProvider">The service provider that is used to create a view model instance.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.ViewModels.DefaultLifecycleViewModelFactory.Create``1">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModel">
            <summary>
            Defines the contract for a lifecycle-aware view model.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelWithoutParameters">
            <summary>
            Defines the contract for a lifecycle-aware view model that takes no parameters.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithoutParameters.InitializeAsync(System.Boolean)">
            <summary>
            An asynchronous lifecycle method for the lifecycle-aware view model initialization.
            </summary>
            <param name="recreated">Determines whether the view model has been destroyed to recover memory and recreated with a restored state if it was persisted.</param>
            <returns>A task that represents the asynchronous initialization operation.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithoutParameters.Initialize(System.Boolean)">
            <summary>
            A synchronous lifecycle method for the lifecycle-aware view model initialization.
            </summary>
            <param name="recreated">Determines whether the view model has been destroyed to recover memory and recreated with a restored state if it was persisted.</param>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelWithParameters`1">
            <summary>
            Defines the contract for a lifecycle-aware view model that takes parameters.
            </summary>
            <typeparam name="TParameters">The type of the view model parameters.</typeparam>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithParameters`1.InitializeAsync(`0,System.Boolean)">
            <summary>
            An asynchronous lifecycle method for the lifecycle-aware view model initialization with <paramref name="parameters"/>.
            </summary>
            <param name="parameters">The view model parameters. Can be <see langword="null"/>.</param>
            <param name="recreated">Determines whether the view model has been destroyed to recover memory and recreated with a restored state if it was persisted.</param>
            <returns>A task that represents the asynchronous initialization operation.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithParameters`1.Initialize(`0,System.Boolean)">
            <summary>
            A synchronous lifecycle method for the lifecycle-aware view model initialization with <paramref name="parameters"/>.
            </summary>
            <param name="parameters">The view model parameters. Can be <see langword="null"/>.</param>
            <param name="recreated">Determines whether the view model has been destroyed to recover memory and recreated with a restored state if it was persisted.</param>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelWithResult`1">
            <summary>
            Defines the contract for a lifecycle-aware view model that returns a result.
            </summary>
            <typeparam name="TResult">The type of the view model result.</typeparam>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithResult`1.SetResult(FlexiMvvm.ViewModels.ResultCode,`0)">
            <summary>
            Sets the lifecycle-aware view model result.
            </summary>
            <param name="resultCode">Determines whether the result should be set as successful or not due to cancellation by the user.</param>
            <param name="result">The view model result. Can be <see langword="null"/>.</param>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelWithResultHandler">
            <summary>
            Defines the contract for a lifecycle-aware view model that can handle a lifecycle-aware view model result.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelWithResultHandler.HandleResult(FlexiMvvm.ViewModels.ResultCode,FlexiMvvm.ViewModels.Result)">
            <summary>
            Handles the lifecycle-aware view model result.
            </summary>
            <param name="resultCode">Determines whether the view model result is set successfully or not due to cancellation by the user.</param>
            <param name="result">The view model result to handle. Can be <see langword="null"/>.</param>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelFactory">
            <summary>
            Defines the contract for a factory that creates a new lifecycle-aware view model instance.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelFactory.Create``1">
            <summary>
            Creates a new lifecycle-aware <typeparamref name="TViewModel"/> instance.
            </summary>
            <typeparam name="TViewModel">The type of the view model to create.</typeparam>
            <returns>The view model instance.</returns>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ILifecycleViewModelStore">
            <summary>
            Defines the contract for a store that keeps lifecycle-aware view models.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelStore.Get``1(System.String)">
            <summary>
            Returns an existing lifecycle-aware <typeparamref name="TViewModel"/> instance from the store.
            </summary>
            <typeparam name="TViewModel">The type of the view model to get.</typeparam>
            <param name="key">The view model unique key.</param>
            <returns>The view model instance if it exists; otherwise, <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelStore.Add``1(System.String,``0)">
            <summary>
            Adds a lifecycle-aware <typeparamref name="TViewModel"/> instance to the store by <paramref name="key"/>.
            </summary>
            <typeparam name="TViewModel">The type of the view model to add.</typeparam>
            <param name="key">The view model unique key.</param>
            <param name="viewModel">The view model to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> or <paramref name="viewModel"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The store already has a view model with the specified <paramref name="key"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ILifecycleViewModelStore.Remove(System.String)">
            <summary>
            Removes an existing lifecycle-aware view model instance from the store by <paramref name="key"/>.
            </summary>
            <param name="key">The view model unique key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:FlexiMvvm.ViewModels.Interaction">
            <summary>
            Defines the contract for a view model to view interaction.
            </summary>
        </member>
        <member name="E:FlexiMvvm.ViewModels.Interaction.Requested">
            <summary>
            Occurs when the view model requested interaction.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.Interaction.RaiseRequested">
            <summary>
            Raises the <see cref="E:FlexiMvvm.ViewModels.Interaction.Requested"/> event.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.Interaction`1">
            <summary>
            Defines the contract for a view model to view interaction with passing a request.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
        </member>
        <member name="E:FlexiMvvm.ViewModels.Interaction`1.Requested">
            <summary>
            Occurs when the view model requested interaction.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.Interaction`1.RaiseRequested(`0)">
            <summary>
            Raises the <see cref="E:FlexiMvvm.ViewModels.Interaction`1.Requested"/> event with passing the <paramref name="request"/>.
            </summary>
            <param name="request">The request to be passed in the event arguments.</param>
        </member>
        <member name="T:FlexiMvvm.ViewModels.InteractionRequestedEventArgs`1">
            <summary>
            Provides data for the <see cref="E:FlexiMvvm.ViewModels.Interaction`1.Requested"/> event.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
        </member>
        <member name="M:FlexiMvvm.ViewModels.InteractionRequestedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:FlexiMvvm.ViewModels.InteractionRequestedEventArgs`1"/> class.
            </summary>
            <param name="request">The request to be passed by the view model to view.</param>
        </member>
        <member name="P:FlexiMvvm.ViewModels.InteractionRequestedEventArgs`1.Request">
            <summary>
            Gets the request sent by the view model.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.IViewModel">
            <summary>
            Defines the contract for a view model. Typically, such view models are used as children of <see cref="T:FlexiMvvm.ViewModels.ILifecycleViewModel"/>.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.LifecycleViewModel">
            <summary>
            Base class for a lifecycle-aware view model implementation that takes no parameters.
            </summary>
        </member>
        <member name="P:FlexiMvvm.ViewModels.LifecycleViewModel.State">
            <summary>
            Gets the bundle that stores the lifecycle-aware view model state as a set of key/value pairs.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModel.InitializeAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModel.Initialize(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.ViewModels.LifecycleViewModel`1">
            <summary>
            Base class for a lifecycle-aware view model implementation that takes parameters.
            </summary>
            <typeparam name="TParameters">The type of the view model parameters.</typeparam>
        </member>
        <member name="P:FlexiMvvm.ViewModels.LifecycleViewModel`1.State">
            <summary>
            Gets the bundle that stores the lifecycle-aware view model state as a set of key/value pairs.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModel`1.InitializeAsync(`0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModel`1.Initialize(`0,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.ViewModels.LifecycleViewModelProvider">
            <summary>
            Represents a provider that returns an existing lifecycle-aware view model instance or creates a new one.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModelProvider.Get``1(FlexiMvvm.ViewModels.ILifecycleViewModelStore,System.String,FlexiMvvm.ViewModels.ILifecycleViewModelFactory,FlexiMvvm.Persistence.IBundle,System.Boolean@)">
            <summary>
            Returns an existing lifecycle-aware <typeparamref name="TViewModel"/> instance by <paramref name="key"/> if it is presented in the <paramref name="store"/>,
            or creates a new one using the <paramref name="factory"/> with restoring its <paramref name="state"/>.
            </summary>
            <typeparam name="TViewModel">The type of the view model to get.</typeparam>
            <param name="store">The view model store.</param>
            <param name="key">The view model unique key.</param>
            <param name="factory">The view model factory.</param>
            <param name="state">The view model state bundle.</param>
            <param name="created"><see langword="true"/> if the view model is created by the <paramref name="factory"/>; otherwise, <see langword="false"/>.</param>
            <returns>The view model instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="store"/> or <paramref name="key"/> or <paramref name="factory"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="factory"/> returned <see langword="null"/> value for the <typeparamref name="TViewModel"/>.</exception>
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModelProvider.SetFactory(FlexiMvvm.ViewModels.ILifecycleViewModelFactory)">
            <summary>
            Sets the lifecycle-aware view model <paramref name="factory"/> that is used to create a view model instance.
            </summary>
            <param name="factory">The view model factory.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="factory"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:FlexiMvvm.ViewModels.LifecycleViewModelStoreFactory">
            <summary>
            Represents a factory that creates a new lifecycle-aware view model store instance.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.LifecycleViewModelStoreFactory.Create">
            <summary>
            Creates a new <see cref="T:FlexiMvvm.ViewModels.ILifecycleViewModelStore"/> instance.
            </summary>
            <returns>The view model store instance.</returns>
        </member>
        <member name="T:FlexiMvvm.ViewModels.Parameters">
            <summary>
            Represents a container for storing lifecycle-aware view model parameters.
            </summary>
        </member>
        <member name="P:FlexiMvvm.ViewModels.Parameters.Bundle">
            <summary>
            Gets the bundle that stores lifecycle-aware view model parameters as a set of key/value pairs.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.Result">
            <summary>
            Represents a container for storing a lifecycle-aware view model result.
            </summary>
        </member>
        <member name="P:FlexiMvvm.ViewModels.Result.Bundle">
            <summary>
            Gets the bundle that stores the lifecycle-aware view model result as a set of key/value pairs.
            </summary>
        </member>
        <member name="T:FlexiMvvm.ViewModels.ResultCode">
            <summary>
            Determines whether a lifecycle-aware view model result is set successfully or not due to cancellation by the user.
            </summary>
        </member>
        <member name="F:FlexiMvvm.ViewModels.ResultCode.Ok">
            <summary>
            Indicates that the lifecycle-aware view model result is set successfully.
            </summary>
        </member>
        <member name="F:FlexiMvvm.ViewModels.ResultCode.Canceled">
            <summary>
            Indicates that the lifecycle-aware view model result is not set due to cancellation by the user.
            </summary>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ResultCode.op_Equality(FlexiMvvm.ViewModels.ResultCode,FlexiMvvm.ViewModels.ResultCode)">
            <summary>
            Determines whether result codes are equal.
            </summary>
            <param name="code1">First result code to compare.</param>
            <param name="code2">Second result code to compare.</param>
            <returns><see langword="true"/> if result codes are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ResultCode.op_Inequality(FlexiMvvm.ViewModels.ResultCode,FlexiMvvm.ViewModels.ResultCode)">
            <summary>
            Determines whether result codes are not equal.
            </summary>
            <param name="code1">First result code to compare.</param>
            <param name="code2">Second result code to compare.</param>
            <returns><see langword="true"/> if result codes are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ResultCode.Equals(System.Object)">
            <summary>
            Determines whether the current result code is equal to the <paramref name="obj"/> one.
            </summary>
            <param name="obj">The result code to compare.</param>
            <returns><see langword="true"/> if the <paramref name="obj"/> is <see cref="T:FlexiMvvm.ViewModels.ResultCode"/> and result codes are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ResultCode.Equals(FlexiMvvm.ViewModels.ResultCode)">
            <summary>
            Determines whether the current result code is equal to the <paramref name="other"/> one.
            </summary>
            <param name="other">The result code to compare.</param>
            <returns><see langword="true"/> if result codes are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:FlexiMvvm.ViewModels.ResultCode.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:FlexiMvvm.ViewModels.ViewModel">
            <summary>
            Base class for a view model implementation. Typically, such view models are used as children of <see cref="T:FlexiMvvm.ViewModels.ILifecycleViewModel"/>.
            </summary>
        </member>
        <member name="P:FlexiMvvm.ViewModels.ViewModel.CommandProvider">
            <summary>
            Gets the command provider.
            </summary>
        </member>
    </members>
</doc>
